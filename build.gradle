plugins {
    id "idea"
    id "java-library"
    id "org.springframework.boot" version "3.2.1"
    id "io.spring.dependency-management" version "1.1.4"
    id "com.google.protobuf" version "0.9.4"
    id "org.jetbrains.kotlin.jvm" version "1.9.21"
    id "org.jetbrains.kotlin.plugin.lombok" version "1.9.21"
    id "org.jetbrains.kotlin.plugin.jpa" version "1.9.21"
}

ext {
    defaultJvmArgs = [
    ]
}

group = 'org.dyson'
version = '0.0.1-SNAPSHOT'

repositories {
    mavenCentral()
    maven { url "https://reposilite.tiktzuki.com/snapshots" }
    maven { url "https://packages.confluent.io/maven" }
}

java {
    sourceCompatibility = JavaVersion.VERSION_21
}

tasks.withType(JavaCompile).tap {
    configureEach {
        options.compilerArgs.addAll(defaultJvmArgs)
    }
}
tasks.register('integrationTest', Test) {
    dependsOn compileJava
    jvmArgs(defaultJvmArgs)
}
tasks.register('unitTest', Test) {
    dependsOn compileJava
    jvmArgs(defaultJvmArgs)
}
tasks.register('srcJar', Jar) {
    archiveClassifier = 'sources'
    from sourceSets.main.allSource
}

dependencies {
    implementation platform("org.axonframework:axon-bom:4.8.0")

    implementation 'org.springframework.boot:spring-boot-starter-data-cassandra-reactive'
//    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-webflux'
    implementation "org.springdoc:springdoc-openapi-starter-webflux-ui:2.1.0"
    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
    annotationProcessor 'org.projectlombok:lombok'
    compileOnly 'org.projectlombok:lombok'

    implementation "com.fasterxml.jackson.module:jackson-module-kotlin"
    implementation "org.jetbrains.kotlin:kotlin-reflect"
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8"
    implementation 'io.github.microutils:kotlin-logging-jvm:3.0.5'

    testImplementation "org.springframework.boot:spring-boot-starter-test"
    testImplementation "org.springframework.security:spring-security-test"
    testImplementation "io.projectreactor:reactor-test"
}

test {
    useJUnitPlatform()
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}
